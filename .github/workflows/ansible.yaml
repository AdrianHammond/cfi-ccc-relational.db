name: Ansible Deployment

on:
  push:
    branches:
      - main  # Adjust this to your main branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8  # Use the desired Python version

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Install Botocore
      run: |
        pip install botocore

    - name: Run Ansible playbook
      run: ansible-playbook ansible/create-rds-db.yaml  # Adjust the playbook filename

    # You can add more steps for notifications, testing, etc. after deployment




# name: GitHub Actions Demo
# run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v3
#       - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "üçè This job's status is ${{ job.status }}."



# name: Run Ansible Playbook

# on:
#   push:
#     branches:
#       - main  # Change this to your default branch name

# jobs:
#   deploy:
#     runs-on: ubuntu-latest  # Use the desired runner environment

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.x  # Choose your desired Python version

#       - name: Install Ansible
#         run: |
#           python -m pip install --upgrade pip
#           pip install ansible

#       - name: Run Create Amazon RDS  Playbook
#         run: ansible/create-rds-db.yaml
#         env:
#           ANSIBLE_HOST_KEY_CHECKING: False  # Optional if host key checking needs to be disabled
